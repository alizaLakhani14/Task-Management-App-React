{"version":3,"sources":["components/Error.jsx","components/TaskForm.jsx","components/Task.jsx","components/TaskList.jsx","components/PaginationCount.jsx","App.js","serviceWorker.js","index.js"],"names":["Error","message","className","validationSchema","Yup","shape","title","required","description","dueDate","Input","TextArea","range","start","end","result","i","push","disabledDate","current","moment","endOf","disabledDateTime","disabledHours","splice","disabledMinutes","disabledSeconds","TaskForm","handleValues","fetchedValues","updateValues","closeModal","useState","image","setImage","handleThumbImageChange","info","file","status","img","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","thumbnailImageUrl","useEffect","console","log","initialValues","Object","keys","length","onSubmit","values","setSubmitting","resetForm","id","Math","floor","random","errors","handleChange","touched","handleBlur","handleSubmit","isSubmitting","setFieldValue","htmlFor","type","placeholder","name","onChange","value","onBlur","autoSize","maxLength","format","disabledTime","d","defaultValue","listType","showUploadList","src","alt","style","width","disable","onClick","Task","task","deleteCard","openModal","editingAvailable","ghost","theme","twoToneColor","TaskList","props","tasks","map","index","delete","edit","makeEdit","PaginationCount","changePage","tasksPerPage","defaultCurrent","total","num","App","state","visible","JSON","parse","localStorage","getItem","fetchedObject","currentPage","toggleModal","setState","handleDelete","filter","find","handleValueUpdate","element","page","setItem","stringify","this","indexOfLastTask","indexOfFirstTask","currentTasks","slice","footer","onOk","handleOk","onCancel","destroyOnClose","size","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4a39c5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Error.css';\r\n\r\nconst Error = ({ message }) => {\r\n\tif (message) {\r\n\t\treturn <div className=\"invalid\">{message}</div>;\r\n\t}\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport './Form.css';\r\nimport * as Yup from 'yup';\r\nimport Error from './Error';\r\nimport { Input, DatePicker, Button, Upload } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\ttitle: Yup.string().required('Must enter a title'),\r\n\tdescription: Yup.string().required('Must give a description'),\r\n\tdueDate: Yup.string().required('Must give a due date')\r\n});\r\n\r\nconst { TextArea } = Input;\r\nfunction range(start, end) {\r\n\tconst result = [];\r\n\tfor (let i = start; i < end; i++) {\r\n\t\tresult.push(i);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction disabledDate(current) {\r\n\t// Can not select days before today and today\r\n\treturn current && current < moment().endOf('day');\r\n}\r\nfunction disabledDateTime() {\r\n\treturn {\r\n\t\tdisabledHours: () => range(0, 24).splice(4, 20),\r\n\t\tdisabledMinutes: () => range(30, 60),\r\n\t\tdisabledSeconds: () => [ 55, 56 ]\r\n\t};\r\n}\r\n\r\nconst TaskForm = ({ handleValues, fetchedValues, updateValues, closeModal }) => {\r\n\tconst [ image, setImage ] = useState(null);\r\n\tconst getBase64 = (img, callback) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t};\r\n\tconst handleThumbImageChange = (info) => {\r\n\t\tif (info.file.status === 'done' || info.file.status === 'error') {\r\n\t\t\tgetBase64(info.file.originFileObj, (thumbnailImageUrl) => setImage(thumbnailImageUrl));\r\n\t\t}\r\n\t};\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconsole.log({ fetchedValues });\r\n\t\t\tif (fetchedValues !== {}) {\r\n\t\t\t\tsetImage(fetchedValues.image);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ fetchedValues ]\r\n\t);\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\ttitle: Object.keys(fetchedValues).length > 0 ? fetchedValues.title : '',\r\n\t\t\t\tdescription: Object.keys(fetchedValues).length > 0 ? fetchedValues.description : '',\r\n\t\t\t\tdueDate:\r\n\t\t\t\t\tObject.keys(fetchedValues).length > 0\r\n\t\t\t\t\t\t? moment(fetchedValues.dueDate)\r\n\t\t\t\t\t\t: moment('00:00:00', 'HH:mm:ss')\r\n\t\t\t}}\r\n\t\t\t// enableReinitialize={true}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\r\n\t\t\t\tObject.keys(fetchedValues).length > 0\r\n\t\t\t\t\t? updateValues({ ...values, id: fetchedValues.id, image })\r\n\t\t\t\t\t: handleValues({ ...values, id: Math.floor(Math.random() * 100), image });\r\n\t\t\t\tsetSubmitting(true);\r\n\t\t\t\tresetForm();\r\n\t\t\t\tcloseModal();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, setFieldValue }) => (\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div className=\"form-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Title</label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter the title\"\r\n\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.title ? <Error message={errors.title} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Description</label>\r\n\t\t\t\t\t\t<Input.TextArea\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Describe your task\"\r\n\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tautoSize={true}\r\n\t\t\t\t\t\t\tmaxLength={1000}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.description ? <Error message={errors.description} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Due Date</label>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tformat=\"YYYY-MM-DD HH:mm:ss\"\r\n\t\t\t\t\t\t\tdisabledDate={disabledDate}\r\n\t\t\t\t\t\t\tdisabledTime={disabledDateTime}\r\n\t\t\t\t\t\t\tid=\"date\"\r\n\t\t\t\t\t\t\tname=\"dueDate\"\r\n\t\t\t\t\t\t\tonChange={(values, d) => setFieldValue('dueDate', d)}\r\n\t\t\t\t\t\t\tdefaultValue={values.dueDate}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.dueDate ? <Error message={errors.dueDate} /> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-field\">\r\n\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\tonChange={handleThumbImageChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button>Upload</Button>\r\n\t\t\t\t\t\t\t{/* {image !== null && <img src={image} alt=\"avatar\" style={{ width: '100%' }} />} */}\r\n\t\t\t\t\t\t\t{image !== null ? (\r\n\t\t\t\t\t\t\t\t<img src={image} alt='avatar' style={{ width: '100%' }} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-field\">\r\n\t\t\t\t\t\t<Button type=\"primary\" disable={isSubmitting} onClick={handleSubmit}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from 'react';\r\nimport './Task.css';\r\nimport { Card, Button, Icon } from 'antd';\r\n\r\nconst Task = ({ task, deleteCard, openModal, editingAvailable }) => {\r\n\treturn (\r\n\t\t<Card title={task.title} style={{ width: 300 }} className=\"Task\">\r\n\t\t\t<p>{`Description: ${task.description}`}</p>\r\n\t\t\t<p>{`DueDate: ${task.dueDate}`}</p>\r\n\t\t\t<img src={task.image} alt=\"img\" />\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\tshape=\"circle\"\r\n\t\t\t\tghost={true}\r\n\t\t\t\tclassName=\"button\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\topenModal();\r\n\t\t\t\t\teditingAvailable(task.id);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Icon type=\"edit\" theme=\"twoTone\" twoToneColor=\"#0000ff\" />\r\n\t\t\t</Button>\r\n\t\t\t<Button type=\"danger\" shape=\"circle\" onClick={() => deleteCard(task.id)} ghost={true} className=\"button\">\r\n\t\t\t\t<Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#ff0000\" />\r\n\t\t\t</Button>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = (props) => {\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.tasks.map((task, index) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tdeleteCard={props.delete}\r\n\t\t\t\t\topenModal={props.edit}\r\n\t\t\t\t\teditingAvailable={props.makeEdit}\r\n\t\t\t\t// {task.isEditModeEnable == true ?'something': null}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\nconst PaginationCount = ({ tasks, tasksPerPage, changePage}) => {\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Pagination defaultCurrent={1} total={tasks.length} onChange={(num) => {\r\n                changePage(num)\r\n            }}/>,\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PaginationCount;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport 'antd/dist/antd.css';\nimport { Modal, Button, Layout, Icon } from 'antd';\nimport TaskList from './components/TaskList';\nimport PaginationCount from './components/PaginationCount';\n\nclass App extends Component {\n\tstate = {\n\t\tvisible: false,\n\t\t// tasks: [\n\t\t// \t{ title: 'hello', description: 'world', dueDate: '', id: 1 },\n\t\t// \t{ title: 'hello1', description: 'world1', dueDate: '', id: 2 },\n\t\t// \t{ title: 'hello2', description: 'world2', dueDate: '', id: 3 },\n\t\t// \t{ title: 'hello3', description: 'world3', dueDate: '', id: 4 },\n\t\t// \t{ title: 'hello4', description: 'world4', dueDate: '', id: 5 },\n\t\t// \t{ title: 'hello5', description: 'world5', dueDate: '', id: 6 },\n\t\t// \t{ title: 'hello6', description: 'world6', dueDate: '', id: 7 },\n\t\t// \t{ title: 'hello7', description: 'world7', dueDate: '', id: 8 },\n\t\t// \t{ title: 'hello8', description: 'world8', dueDate: '', id: 9 },\n\t\t// \t{ title: 'hello9', description: 'world9', dueDate: '', id: 10 },\n\t\t// \t{ title: 'hello10', description: 'world10', dueDate: '', id: 11 },\n\t\t// \t{ title: 'hello11', description: 'world11', dueDate: '', id: 12 },\n\t\t// \t{ title: 'hello12', description: 'world2', dueDate: '', id: 13 }\n\t\t// ],\n\t\ttasks: JSON.parse(localStorage.getItem('myTasks')) || [],\n\t\tfetchedObject: {},\n\t\tcurrentPage: 1,\n\t\ttasksPerPage: 10\n\t};\n\n\tcomponentDidMount() {\n\t\tlocalStorage.setItem('myTasks', JSON.stringify(this.state.tasks));\n\n\t}\n\tcomponentDidUpdate() {\n\n\t\tlocalStorage.setItem('myTasks', JSON.stringify(this.state.tasks));\n\n\t}\n\t// Open or Close Modal\n\ttoggleModal = () => {\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t});\n\t};\n\n\t// Handle values after form Submission\n\thandleValues = (values) => {\n\t\tthis.setState({\n\t\t\ttasks: [ ...this.state.tasks, values ]\n\t\t});\n\t\t// localStorage.setItem('myTasks', this.state.tasks)\n\t\t// console.log(this.state.tasks);\n\t};\n\n\t// For deleting task\n\thandleDelete = (id) => {\n\t\tthis.setState({\n\t\t\ttasks: this.state.tasks.filter((task) => task.id !== id)\n\t\t});\n\t};\n\n\t// Enabling Edit\n\tmakeEdit = (id) => {\n\t\tlet edit = this.state.tasks.find((task) => task.id === id);\n\t\tthis.setState({\n\t\t\tfetchedObject: { ...edit }\n\t\t});\n\t};\n\n\t// Updating values after editing\n\thandleValueUpdate = (values) => {\n\t\tthis.setState({\n\t\t\ttasks: this.state.tasks.map((element) => {\n\t\t\t\tif (element.id === values.id) {\n\t\t\t\t\treturn { ...values };\n\t\t\t\t}\n\t\t\t\treturn element;\n\t\t\t}),\n\t\t\tfetchedObject: {}\n\t\t});\n\t};\n\n\t// Pagination functionality\n\thandleChange = (page) => {\n\t\tthis.setState({\n\t\t\tcurrentPage: page\n\t\t});\n\t};\n\n\trender() {\n\t\tconst indexOfLastTask = this.state.currentPage * this.state.tasksPerPage;\n\t\tconst indexOfFirstTask = indexOfLastTask - this.state.tasksPerPage;\n\t\tconst currentTasks = this.state.tasks !== null && this.state.tasks.slice(indexOfFirstTask, indexOfLastTask);\n\t\tconsole.log(this.state.tasks);\n\t\treturn (\n\t\t\t<Layout className=\"layout-style\">\n\t\t\t\t<header>\n\t\t\t\t\t<h1>Task Management App</h1>\n\t\t\t\t</header>\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<Modal\n\t\t\t\t\t\tfooter={null}\n\t\t\t\t\t\ttitle=\"Create Task\"\n\t\t\t\t\t\tvisible={this.state.visible}\n\t\t\t\t\t\tonOk={this.handleOk}\n\t\t\t\t\t\tonCancel={this.toggleModal}\n\t\t\t\t\t\tdestroyOnClose={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TaskForm\n\t\t\t\t\t\t\thandleValues={this.handleValues}\n\t\t\t\t\t\t\tfetchedValues={this.state.fetchedObject}\n\t\t\t\t\t\t\tupdateValues={this.handleValueUpdate}\n\t\t\t\t\t\t\tcloseModal={this.toggleModal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Modal>\n\n\t\t\t\t\t<TaskList\n\t\t\t\t\t\ttasks={currentTasks}\n\t\t\t\t\t\tdelete={this.handleDelete}\n\t\t\t\t\t\tedit={this.toggleModal}\n\t\t\t\t\t\tmakeEdit={this.makeEdit}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"add-button\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={this.toggleModal}\n\t\t\t\t\t\tclassName=\"add-button\"\n\t\t\t\t\t\tshape=\"circle\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon type=\"plus\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.tasks !== null && this.state.tasks.length > 0 ? (\n\t\t\t\t\t<div className=\"pagination\">\n\t\t\t\t\t\t<PaginationCount\n\t\t\t\t\t\t\ttasks={this.state.tasks}\n\t\t\t\t\t\t\ttasksPerPage={this.state.tasksPerPage}\n\t\t\t\t\t\t\tchangePage={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}